// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int             @id @default(autoincrement())
  email             String          @unique
  email_verified_at DateTime?
  name              String
  image             String?         @default("storage/images/default.jpeg")
  password          String
  created_at        DateTime?       @default(now())
  updated_at        DateTime?
  deleted_at        DateTime?
  roleId            Int
  role              Role            @relation(fields: [roleId], references: [id]) // one role
  PersonalToken     PersonalToken[]

  @@map("users")
}

model Role {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  created_at DateTime?    @default(now())
  updated_at DateTime?
  deleted_at DateTime?
  user       User[] // many users
  ModuleRole ModuleRole[]

  @@map("roles")
}

model Module {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  created_at DateTime?    @default(now())
  updated_at DateTime?
  deleted_at DateTime?
  ModuleRole ModuleRole[]

  @@map("modules")
}

model ModuleRole {
  roleId   Int
  moduleId Int
  read     Boolean
  write    Boolean
  role     Role    @relation(fields: [roleId], references: [id]) // one role
  module   Module  @relation(fields: [moduleId], references: [id]) // one module

  @@id([roleId, moduleId])
}

model PersonalToken {
  id             Int       @id @default(autoincrement())
  userId         Int
  token          String    @unique
  created_at     DateTime? @default(now())
  expirationDate DateTime?
  active         Boolean
  user           User      @relation(fields: [userId], references: [id]) // one user
}
